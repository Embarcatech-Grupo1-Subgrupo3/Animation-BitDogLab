#ifndef HANDLE_KEY4
#define HANDLE_KEY4

#include "matrix_led.h"

int frame_4_1[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }};

int frame_4_2[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }
    };

int frame_4_3[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0}}
    };

int frame_4_4[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }
    };

int frame_4_5[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }
    };

int frame_4_6[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }
    };

int frame_4_7[5][5][3] = {
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 165, 0}, {255, 0, 0}, {255, 165, 0}, {255, 165, 0} },
    { {255, 165, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 165, 0} },
    { {0, 0, 0}, {255, 165, 0}, {255, 165, 0}, {255, 165, 0}, {0, 0, 0} }
    };

int frame_4_8[5][5][3] = {
    { {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0} } ,
    { {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0} },
    { {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0} },
    { {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0} },
    { {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}
    };

int frame_4_9[5][5][3] = {   
    {{0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}},
    {{0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}},
    {{0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}}
    };

int frame_4_10[5][5][3] = {   
    {{0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}}
    };

int frame_4_11[5][5][3] = {   
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}},
    {{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}}
    };

 int frame_4_12[5][5][3] = {       
    {{0, 0, 0}, {255, 255, 0}, {0, 0, 0}, {255, 255, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 0, 0}},
    {{0, 255, 0}, {255, 22, 255}, {0, 255, 0}, {255, 22, 255}, {0, 255, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 0, 0}, {0, 255, 0}, {0, 0, 0}, {0, 0, 0}}
    };

int frame_4_13[5][5][3] = {       
    {{0, 0, 0}, {255, 255, 0}, {0, 0, 0}, {255, 255, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 0, 0}},
    {{0, 255, 0}, {255, 0, 0}, {0, 255, 0}, {255, 0, 0}, {0, 255, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 0, 0}, {0, 255, 0}, {0, 0, 0}, {0, 0, 0}}
    };

void handle_key4(int state)
{
    npClear();
    switch (state)
    {
    case 0:
        updateMatrix(frame_4_1);
        break;
    case 1:
        updateMatrix(frame_4_2);
        break;
    case 2:
        updateMatrix(frame_4_3);
        break;
    case 3:
        updateMatrix(frame_4_4);
        break;
    case 4:
        updateMatrix(frame_4_5);
        break;
    case 5:
        updateMatrix(frame_4_6);
        break;
    case 6:
        updateMatrix(frame_4_7);
        break;
    case 7:
        updateMatrix(frame_4_8);
        break;
    case 8:
        updateMatrix(frame_4_9);
        break;
    case 9:
        updateMatrix(frame_4_10);
        break;
    case 10:
        updateMatrix(frame_4_11);
        break;
    case 11:
        updateMatrix(frame_4_12);
        break;
    case 12:
        updateMatrix(frame_4_13);
        break;
    }
}

#endif